// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


model User {
  id                  String      @id @default(uuid())
  firstName           String
  lastName            String
  fullName            String
  email               String @unique
  password            String
  profileImage        String?
  phone               String?
  role                Role @default(TRAINEE)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  schedules           classSchedule[]
  bookingClass        BookingClass[]

  @@map("users")
}

model classSchedule {
  id                  String      @id @default(uuid())
  date                DateTime
  startTime           DateTime
  endTime             DateTime
  trainerId           String
  trainer             User @relation(fields: [trainerId], references: [id])
  maxTrainee          Int @default(10)
  totalCurrentTrainee Int @default(0)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  bookingClass        BookingClass[]
  @@map("class-schedules")
}

model BookingClass {
  id                  String      @id @default(uuid())
  traineeId           String
  trainee             User @relation(fields: [traineeId], references: [id])
  scheduleId          String
  schedules           classSchedule @relation(fields: [scheduleId], references: [id])
  status              BookingStatus @default(BOOKED)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  
  @@map("booking-class")
}



enum Role {
  ADMIN
  TRAINER
  TRAINEE
}

enum BookingStatus {
  BOOKED
  CANCELED
}